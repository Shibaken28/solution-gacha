name: Deploy to GitHub Pages

on:
  # mainブランチへのプッシュ時にワークフローを実行
  push:
    branches:
      - main
  # Actionsタブから手動でワークフローを実行できるようにする
  workflow_dispatch:

# GITHUB_TOKEN の権限を設定して、GitHub Pages へのデプロイを許可する
permissions:
  contents: read
  pages: write
  id-token: write

# 1つのコンカレントなデプロイメントのみを許可し、進行中の実行と最新のキューに入れられた実行の間でキューに入れられた実行をスキップする。
# ただし、これらの本番デプロイメントを完了させるために、進行中の実行をキャンセルしないでください。
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # プロジェクトで使用しているNode.jsのバージョンに合わせてください
          cache: 'npm'

      - name: Install dependencies
        run: npm ci # `npm install` の代わりに `npm ci` を使用すると、よりクリーンで再現性の高いインストールが可能です

      - name: Build application
        run: npm run build # これで index.js が生成されます

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # デプロイする静的ファイルが含まれるディレクトリのパス
          # index.html, index.css, 生成された index.js がルートにあるため、カレントディレクトリを指定
          path: '.'

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4